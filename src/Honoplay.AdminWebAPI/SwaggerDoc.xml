<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Honoplay.AdminWebAPI</name>
    </assembly>
    <members>
        <member name="M:Honoplay.AdminWebAPI.Controllers.AvatarController.Get(Honoplay.Application.Avatars.Queries.GetAvatarsList.GetAvatarsListQueryModel)">
            <summary>
            This service retrieve all avatars. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll avatar model</param>
            <returns>Get all avatars list with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.AvatarController.Get(System.Int32)">
            <summary>
            This service retrieve avatar.
            </summary>
            <param name="id">Get avatar model</param>
            <returns>Get avatar by avatarId with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Post(Honoplay.Application.Classrooms.Commands.CreateClassroom.CreateClassroomCommand)">
            <summary>
            This service create classroom.
            </summary>
            <param name="command">Create classroom model</param>
            <returns>CreateClassroomModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Put(Honoplay.Application.Classrooms.Commands.UpdateClassroom.UpdateClassroomCommand)">
            <summary>
            This service update classroom.
            </summary>
            <param name="command">Update classroom model</param>
            <returns>UpdateClassroomModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Get(Honoplay.Application.Classrooms.Queries.GetClassroomsList.GetClassroomsListQueryModel)">
            <summary>
            This service retrieve all classrooms by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll classroom model</param>
            <returns>Get all classrooms list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Get(System.Int32)">
            <summary>
            This service retrieve classroom by classroom id
            </summary>
            <param name="id">Get classroom model</param>
            <returns>Get classroom by tenant id and classroom id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.GetByTrainingId(System.Int32)">
            <summary>
            This service retrieve classroom list by training id
            </summary>
            <param name="trainingId">Get classrooms</param>
            <returns>Get classrooms by tenant id and training id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ContentFileController.Post(Honoplay.Application.ContentFiles.Commands.CreateContentFile.CreateContentFileCommand)">
            <summary>
            This service create contentFile.
            </summary>
            <param name="command">Create contentFile model</param>
            <returns>CreateContentFileModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ContentFileController.Put(Honoplay.Application.ContentFiles.Commands.UpdateContentFile.UpdateContentFileCommand)">
            <summary>
            This service update contentFile.
            </summary>
            <param name="command">Update contentFile model</param>
            <returns>UpdateContentFileModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ContentFileController.Get(Honoplay.Application.ContentFiles.Queries.GetContentFilesList.GetContentFilesListQueryModel)">
            <summary>
            This service retrieve all contentFiles by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll contentFile model</param>
            <returns>Get all contentFiles list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ContentFileController.Get(System.Guid)">
            <summary>
            This service retrieve contentFile.
            </summary>
            <param name="id">Get contentFile model</param>
            <returns>Get contentFile by contentFileId with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Post(Honoplay.Application.Options.Commands.CreateOption.CreateOptionCommand)">
            <summary>
            This service create option.
            </summary>
            <param name="command">Create option model</param>
            <returns>CreateOptionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Put(Honoplay.Application.Options.Commands.UpdateOption.UpdateOptionCommand)">
            <summary>
            This service update option.
            </summary>
            <param name="command">Update option model</param>
            <returns>UpdateOptionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Get(Honoplay.Application.Options.Queries.GetOptionsList.GetOptionsListQueryModel)">
            <summary>
            This service update option.
            </summary>
            <param name="query">GetAll option model</param>
            <returns>Get all options list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Get(System.Int32)">
            <summary>
            This service update option.
            </summary>
            <param name="id">Get option model</param>
            <returns>Get option by tenant id and option id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.GetQuestionsListByQuestionId(System.Int32)">
            <summary>
            This service retrieve session by question id
            </summary>
            <param name="questionId">Get option model</param>
            <returns>Get option by tenant id and option id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionCategoryController.Post(Honoplay.Application.QuestionCategories.Commands.CreateQuestionCategory.CreateQuestionCategoryCommand)">
            <summary>
            This service create questionCategory.
            </summary>
            <param name="command">Create questionCategory model</param>
            <returns>CreateQuestionCategoryModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Post(Honoplay.Application.Questions.Commands.CreateQuestion.CreateQuestionCommand)">
            <summary>
            This service create question.
            </summary>
            <param name="command">Create question model</param>
            <returns>CreateQuestionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Put(Honoplay.Application.Questions.Commands.UpdateQuestion.UpdateQuestionCommand)">
            <summary>
            This service update question.
            </summary>
            <param name="command">Update question model</param>
            <returns>UpdateQuestionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Get(Honoplay.Application.Questions.Queries.GetQuestionsList.GetQuestionsListQueryModel)">
            <summary>
            This service update question.
            </summary>
            <param name="query">GetAll question model</param>
            <returns>Get all questions list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Get(System.Int32)">
            <summary>
            This service update question.
            </summary>
            <param name="id">Get question model</param>
            <returns>Get question by tenant id and question id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionDifficultyController.Get(Honoplay.Application.QuestionDifficulties.Queries.GetQuestionDifficultiesList.GetQuestionDifficultiesListQueryModel)">
            <summary>
            This service retrieve all questionDifficulties by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll questionDifficulty model</param>
            <returns>Get all questionDifficulties list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionDifficultyController.Get(System.Int32)">
            <summary>
            This service retrieve questionDifficulty.
            </summary>
            <param name="id">Get questionDifficulty model</param>
            <returns>Get questionDifficulty by questionDifficultyId with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionTypeController.Get(Honoplay.Application.QuestionTypes.Queries.GetQuestionTypesList.GetQuestionTypesListQueryModel)">
            <summary>
            This service retrieve all questionTypes by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll questionType model</param>
            <returns>Get all questionTypes list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionTypeController.Get(System.Int32)">
            <summary>
            This service retrieve questionType.
            </summary>
            <param name="id">Get questionType model</param>
            <returns>Get questionType by questionTypeId with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.SessionController.Post(Honoplay.Application.Sessions.Commands.CreateSession.CreateSessionCommand)">
            <summary>
            This service create session.
            </summary>
            <param name="command">Create session model</param>
            <returns>CreateSessionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.SessionController.Put(Honoplay.Application.Sessions.Commands.UpdateSession.UpdateSessionCommand)">
            <summary>
            This service update session.
            </summary>
            <param name="command">Update session model</param>
            <returns>UpdateSessionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.SessionController.Get(Honoplay.Application.Sessions.Queries.GetSessionsList.GetSessionsListQueryModel)">
            <summary>
            This service retrieve all sessions by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll session model</param>
            <returns>Get all sessions list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.SessionController.Get(System.Int32)">
            <summary>
            This service retrieve session by session id
            </summary>
            <param name="id">Get session model</param>
            <returns>Get session by tenant id and session id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.SessionController.GetSessionsListByClassroomId(System.Int32)">
            <summary>
            This service retrieve session by session id
            </summary>
            <param name="classroomId">Get session model</param>
            <returns>Get session by tenant id and classroom id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TagController.Post(Honoplay.Application.Tags.Commands.CreateTag.CreateTagCommand)">
            <summary>
            This service create tag.
            </summary>
            <param name="command">Create tag model</param>
            <returns>CreateTagModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TagController.Put(Honoplay.Application.Tags.Commands.UpdateTag.UpdateTagCommand)">
            <summary>
            This service update tag.
            </summary>
            <param name="command">Update tag model</param>
            <returns>UpdateTagModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TagController.Get(Honoplay.Application.Tags.Queries.GetTagsList.GetTagsListQueryModel)">
            <summary>
            This service update tag.
            </summary>
            <param name="query">GetAll tag model</param>
            <returns>Get all tags list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TagController.Get(System.Int32)">
            <summary>
            This service update tag.
            </summary>
            <param name="id">Get tag model</param>
            <returns>Get tag by tenant id and tag id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TagController.GetQuestionsListByQuestionId(System.Int32)">
            <summary>
            This service retrieve session by question id
            </summary>
            <param name="questionId">Get tag model</param>
            <returns>Get tag by tenant id and tag id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TenantController.Get(System.Guid)">
            <summary>
            Retrieve the tenant by ID.
            </summary>
            <param name="id">The ID of the desired Tenant</param>
            <returns>Tenant </returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TenantController.Get(Honoplay.Application.Tenants.Queries.GetTenantsList.GetTenantsListQueryModel)">
            <summary>
            Retrieve the tenants by the Skip and Take.
            </summary>
            <param name="command"> Retrieve the tenants by the Skip and Take.</param>
            <remarks>How many items skipped</remarks>
            <returns>Tenants</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TenantController.Post(Honoplay.Application.Tenants.Commands.CreateTenant.CreateTenantCommand)">
            <summary>
            Retrieve the tenants by the Skip and Take.
            </summary>
            <param name="command"> Retrieve the tenants by the Skip and Take.</param>
            <returns>Created Tenant</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeUserController.Post(Honoplay.Application.TraineeUsers.Commands.CreateTraineeUser.CreateTraineeUserCommand)">
            <summary>
            This service create traineeUser.
            </summary>
            <param name="command">Create traineeUser model</param>
            <returns>CreateTraineeUserModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeUserController.GetByClassRoomId(System.Int32)">
            <summary>
            This service retrieve trainings by trainingId
            </summary>
            <param name="classroomId">Get trainings list </param>
            <returns>Get trainings by tenant id and trainerUser id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeGroupController.Post(Honoplay.Application.TraineeGroups.Commands.CreateTraineeGroup.CreateTraineeGroupCommand)">
            <summary>
            This service create traineeGroup.
            </summary>
            <param name="command">Create traineeGroup model</param>
            <returns>CreateTraineeGroupModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeGroupController.Put(Honoplay.Application.TraineeGroups.Commands.UpdateTraineeGroup.UpdateTraineeGroupCommand)">
            <summary>
            This service update traineeGroup.
            </summary>
            <param name="command">Update traineeGroup model</param>
            <returns>UpdateTraineeGroupModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeGroupController.Get(Honoplay.Application.TraineeGroups.Queries.GetTraineeGroupsList.GetTraineeGroupsListQueryModel)">
            <summary>
            This service retrieve all traineeGroups by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll traineeGroup model</param>
            <returns>Get all traineeGroups list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeGroupController.Get(System.Int32)">
            <summary>
            This service retrieve traineeGroup by traineeGroup id
            </summary>
            <param name="id">Get traineeGroup model</param>
            <returns>Get traineeGroup by tenant id and traineeGroup id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingCategoryController.Get(Honoplay.Application.TrainingCategories.Queries.GetTrainingCategoriesList.GetTrainingCategoriesListQueryModel)">
            <summary>
            This service retrieve all trainingCategories by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll trainingCategory model</param>
            <returns>Get all trainingCategories list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingCategoryController.Get(System.Int32)">
            <summary>
            This service retrieve trainingCategory.
            </summary>
            <param name="id">Get trainingCategory model</param>
            <returns>Get trainingCategory by trainingCategoryId with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Post(Honoplay.Application.Trainings.Commands.CreateTraining.CreateTrainingCommand)">
            <summary>
            This service create training.
            </summary>
            <param name="command">Create training model</param>
            <returns>CreateTrainingModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Put(Honoplay.Application.Trainings.Commands.UpdateTraining.UpdateTrainingCommand)">
            <summary>
            This service update training.
            </summary>
            <param name="command">Update training model</param>
            <returns>UpdateTrainingModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Get(Honoplay.Application.Trainings.Queries.GetTrainingsList.GetTrainingsListQueryModel)">
            <summary>
            This service retrieve all trainings by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll training model</param>
            <returns>Get all trainings list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Get(System.Int32)">
            <summary>
            This service retrieve training by training id
            </summary>
            <param name="id">Get training model</param>
            <returns>Get training by tenant id and training id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.GetByTrainingSeriesId(System.Int32)">
            <summary>
            This service retrieve training by trainingSeriesId
            </summary>
            <param name="trainingSeriesId">Get trainings list </param>
            <returns>Get training by tenant id and trainingSeries id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Post(Honoplay.Application.TrainingSerieses.Commands.CreateTrainingSeries.CreateTrainingSeriesCommand)">
            <summary>
            This service create trainingSeries.
            </summary>
            <param name="command">Create trainingSeries model</param>
            <returns>CreateTrainingSeriesModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Put(Honoplay.Application.TrainingSerieses.Commands.UpdateTrainingSeries.UpdateTrainingSeriesCommand)">
            <summary>
            This service update trainingSeries.
            </summary>
            <param name="command">Update trainingSeries model</param>
            <returns>UpdateTrainingSeriesModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Get(Honoplay.Application.TrainingSerieses.Queries.GetTrainingSeriesesList.GetTrainingSeriesesListQueryModel)">
            <summary>
            This service update trainingSeries.
            </summary>
            <param name="query">GetAll trainingSeries model</param>
            <returns>Get all trainingSerieses list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Get(System.Int32)">
            <summary>
            This service update trainingSeries.
            </summary>
            <param name="id">Get trainingSeries model</param>
            <returns>Get trainingSeries by tenant id and trainingSeries id with status code.</returns>
        </member>
    </members>
</doc>

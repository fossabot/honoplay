<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Honoplay.AdminWebAPI</name>
    </assembly>
    <members>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Post(Honoplay.Application.Classrooms.Commands.CreateClassroom.CreateClassroomCommand)">
            <summary>
            This service create classroom.
            </summary>
            <param name="command">Create classroom model</param>
            <returns>CreateClassroomModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Put(Honoplay.Application.Classrooms.Commands.UpdateClassroom.UpdateClassroomCommand)">
            <summary>
            This service update classroom.
            </summary>
            <param name="command">Update classroom model</param>
            <returns>UpdateClassroomModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Get(Honoplay.Application.Classrooms.Queries.GetClassroomsList.GetClassroomsListQueryModel)">
            <summary>
            This service retrieve all classrooms by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll classroom model</param>
            <returns>Get all classrooms list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.ClassroomController.Get(System.Int32)">
            <summary>
            This service retrieve classroom by classroom id
            </summary>
            <param name="id">Get classroom model</param>
            <returns>Get classroom by tenant id and classroom id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Post(Honoplay.Application.Options.Commands.CreateOption.CreateOptionCommand)">
            <summary>
            This service create option.
            </summary>
            <param name="command">Create option model</param>
            <returns>CreateOptionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Put(Honoplay.Application.Options.Commands.UpdateOption.UpdateOptionCommand)">
            <summary>
            This service update option.
            </summary>
            <param name="command">Update option model</param>
            <returns>UpdateOptionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Get(Honoplay.Application.Options.Queries.GetOptionsList.GetOptionsListQueryModel)">
            <summary>
            This service update option.
            </summary>
            <param name="query">GetAll option model</param>
            <returns>Get all options list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.OptionController.Get(System.Int32)">
            <summary>
            This service update option.
            </summary>
            <param name="id">Get option model</param>
            <returns>Get option by tenant id and option id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Post(Honoplay.Application.Questions.Commands.CreateQuestion.CreateQuestionCommand)">
            <summary>
            This service create question.
            </summary>
            <param name="command">Create question model</param>
            <returns>CreateQuestionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Put(Honoplay.Application.Questions.Commands.UpdateQuestion.UpdateQuestionCommand)">
            <summary>
            This service update question.
            </summary>
            <param name="command">Update question model</param>
            <returns>UpdateQuestionModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Get(Honoplay.Application.Questions.Queries.GetQuestionsList.GetQuestionsListQueryModel)">
            <summary>
            This service update question.
            </summary>
            <param name="query">GetAll question model</param>
            <returns>Get all questions list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.QuestionController.Get(System.Int32)">
            <summary>
            This service update question.
            </summary>
            <param name="id">Get question model</param>
            <returns>Get question by tenant id and question id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TenantController.Get(System.Guid)">
            <summary>
            Retrieve the tenant by ID.
            </summary>
            <param name="id">The ID of the desired Tenant</param>
            <returns>Tenant </returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TenantController.Get(Honoplay.Application.Tenants.Queries.GetTenantsList.GetTenantsListQueryModel)">
            <summary>
            Retrieve the tenants by the Skip and Take.
            </summary>
            <param name="command"> Retrieve the tenants by the Skip and Take.</param>
            <remarks>How many items skipped</remarks>
            <returns>Tenants</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TenantController.Post(Honoplay.Application.Tenants.Commands.CreateTenant.CreateTenantCommand)">
            <summary>
            Retrieve the tenants by the Skip and Take.
            </summary>
            <param name="command"> Retrieve the tenants by the Skip and Take.</param>
            <returns>Created Tenant</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TraineeController.Post(Honoplay.Application.Trainees.Commands.CreateTrainee.CreateTraineeCommand)">
            <summary>
            This service create trainee.
            </summary>
            <param name="command">Create trainee model</param>
            <returns>CreateTraineeModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Post(Honoplay.Application.Trainings.Commands.CreateTraining.CreateTrainingCommand)">
            <summary>
            This service create training.
            </summary>
            <param name="command">Create training model</param>
            <returns>CreateTrainingModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Put(Honoplay.Application.Trainings.Commands.UpdateTraining.UpdateTrainingCommand)">
            <summary>
            This service update training.
            </summary>
            <param name="command">Update training model</param>
            <returns>UpdateTrainingModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Get(Honoplay.Application.Trainings.Queries.GetTrainingsList.GetTrainingsListQueryModel)">
            <summary>
            This service retrieve all trainings by tenant id. Filtered skip and take parameters.
            </summary>
            <param name="query">GetAll training model</param>
            <returns>Get all trainings list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingController.Get(System.Int32)">
            <summary>
            This service retrieve training by training id
            </summary>
            <param name="id">Get training model</param>
            <returns>Get training by tenant id and training id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Post(Honoplay.Application.TrainingSerieses.Commands.CreateTrainingSeries.CreateTrainingSeriesCommand)">
            <summary>
            This service create trainingSeries.
            </summary>
            <param name="command">Create trainingSeries model</param>
            <returns>CreateTrainingSeriesModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Put(Honoplay.Application.TrainingSerieses.Commands.UpdateTrainingSeries.UpdateTrainingSeriesCommand)">
            <summary>
            This service update trainingSeries.
            </summary>
            <param name="command">Update trainingSeries model</param>
            <returns>UpdateTrainingSeriesModel with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Get(Honoplay.Application.TrainingSerieses.Queries.GetTrainingSeriesesList.GetTrainingSeriesesListQueryModel)">
            <summary>
            This service update trainingSeries.
            </summary>
            <param name="query">GetAll trainingSeries model</param>
            <returns>Get all trainingSerieses list by tenant id with status code.</returns>
        </member>
        <member name="M:Honoplay.AdminWebAPI.Controllers.TrainingSeriesController.Get(System.Int32)">
            <summary>
            This service update trainingSeries.
            </summary>
            <param name="id">Get trainingSeries model</param>
            <returns>Get trainingSeries by tenant id and trainingSeries id with status code.</returns>
        </member>
    </members>
</doc>
